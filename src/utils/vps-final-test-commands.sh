
#!/bin/bash
# TESTE FINAL COMPLETO: Fluxo WhatsApp Corrigido
# Execute: ssh root@31.97.24.222 < vps-final-test-commands.sh

echo "=== üéØ TESTE FINAL COMPLETO - FLUXO WHATSAPP CORRIGIDO ==="
echo "Data/Hora: $(date)"
echo "==========================="

# 1. LIMPEZA INICIAL (usando endpoint correto)
echo "=== üßπ LIMPEZA INICIAL COM ENDPOINT CORRETO ==="
INSTANCES_TO_DELETE=$(curl -s http://localhost:3001/instances | jq -r '.instances[].instanceId' 2>/dev/null)

if [ -n "$INSTANCES_TO_DELETE" ]; then
  echo "üóëÔ∏è Deletando inst√¢ncias existentes com POST /instance/delete..."
  
  for instance in $INSTANCES_TO_DELETE; do
    echo "Deletando: $instance"
    DELETE_RESULT=$(curl -s -X POST http://localhost:3001/instance/delete \
      -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3" \
      -H "Content-Type: application/json" \
      -d "{\"instanceId\": \"$instance\"}")
    
    echo "Resultado: $(echo $DELETE_RESULT | head -c 100)..."
    sleep 0.5
  done
else
  echo "‚úÖ Nenhuma inst√¢ncia para deletar"
fi

echo "=== üìä CONTAGEM AP√ìS LIMPEZA ==="
FINAL_COUNT=$(curl -s http://localhost:3001/instances | jq '.instances | length' 2>/dev/null || echo "0")
echo "Inst√¢ncias restantes: $FINAL_COUNT"

# 2. TESTE COMPLETO DO FLUXO CORRIGIDO
echo "=== üöÄ TESTE DO FLUXO COMPLETO CORRIGIDO ==="

# Criar nova inst√¢ncia de teste
TEST_INSTANCE="teste_fluxo_correto_$(date +%s)"
echo "üèóÔ∏è Criando inst√¢ncia de teste: $TEST_INSTANCE"

CREATE_RESULT=$(curl -s -X POST http://localhost:3001/instance/create \
  -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3" \
  -H "Content-Type: application/json" \
  -d "{\"instanceId\": \"$TEST_INSTANCE\", \"sessionName\": \"teste_corrigido\"}")

echo "‚úÖ Resultado cria√ß√£o: $CREATE_RESULT"

# Aguardar inicializa√ß√£o
echo "‚è≥ Aguardando inicializa√ß√£o (5 segundos)..."
sleep 5

# 3. TESTE QR CODE COM ENDPOINT CORRETO
echo "=== üì± TESTE QR CODE - ENDPOINT CORRETO GET /instance/{id}/qr ==="

for attempt in {1..3}; do
  echo "üîÑ Tentativa $attempt de 3 para QR Code..."
  
  QR_RESULT=$(curl -s -X GET "http://localhost:3001/instance/$TEST_INSTANCE/qr" \
    -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3")
  
  echo "üì• Resultado QR (primeiros 200 chars): $(echo $QR_RESULT | head -c 200)..."
  
  # Verificar se cont√©m QR v√°lido
  if [[ "$QR_RESULT" == *"qrCode"* ]] || [[ "$QR_RESULT" == *"base64"* ]]; then
    echo "‚úÖ QR Code encontrado na tentativa $attempt!"
    
    # Verificar se √© base64 v√°lido
    QR_LENGTH=$(echo "$QR_RESULT" | jq -r '.qrCode // empty' 2>/dev/null | wc -c)
    echo "üìè Tamanho do QR Code: $QR_LENGTH caracteres"
    
    if [ "$QR_LENGTH" -gt 100 ]; then
      echo "‚úÖ QR Code parece v√°lido (tamanho > 100 chars)"
    else
      echo "‚ö†Ô∏è QR Code pode estar incompleto"
    fi
    
    break
  else
    echo "‚è≥ QR Code ainda n√£o dispon√≠vel, aguardando..."
    sleep 3
  fi
done

# 4. VERIFICAR STATUS DA INST√ÇNCIA
echo "=== üìä VERIFICA√á√ÉO DE STATUS ==="
STATUS_RESULT=$(curl -s -X GET "http://localhost:3001/instance/$TEST_INSTANCE/status" \
  -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3")

echo "üìã Status da inst√¢ncia: $STATUS_RESULT"

# 5. TESTE DE ENVIO DE MENSAGEM (endpoint correto)
echo "=== üì§ TESTE ENVIO DE MENSAGEM - ENDPOINT CORRETO POST /send ==="
MESSAGE_RESULT=$(curl -s -X POST http://localhost:3001/send \
  -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3" \
  -H "Content-Type: application/json" \
  -d "{\"instanceId\": \"$TEST_INSTANCE\", \"to\": \"5562000000000\", \"message\": \"Teste de mensagem do fluxo corrigido\"}")

echo "üìß Resultado envio: $MESSAGE_RESULT"

# 6. VERIFICAR LOGS DE WEBHOOK
echo "=== üîó VERIFICA√á√ÉO DE WEBHOOK GLOBAL ==="
echo "‚ÑπÔ∏è Webhook global configurado: https://kigyebrhfoljnydfipcr.supabase.co/functions/v1/webhook_whatsapp_web"
echo "üìù Verificando logs recentes do PM2..."

# Mostrar logs recentes que podem conter webhook
pm2 logs --lines 10 | grep -i webhook || echo "Nenhum log de webhook encontrado nos logs recentes"

# 7. LIMPEZA FINAL DO TESTE
echo "=== üßπ LIMPEZA FINAL ==="
echo "üóëÔ∏è Deletando inst√¢ncia de teste..."
CLEANUP_RESULT=$(curl -s -X POST http://localhost:3001/instance/delete \
  -H "Authorization: Bearer 3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3" \
  -H "Content-Type: application/json" \
  -d "{\"instanceId\": \"$TEST_INSTANCE\"}")

echo "üßπ Resultado limpeza: $CLEANUP_RESULT"

# 8. RESUMO FINAL
echo "=== üéâ RESUMO DO TESTE COMPLETO ==="
echo "‚úÖ Endpoints corretos identificados:"
echo "   - Cria√ß√£o: POST /instance/create"
echo "   - QR Code: GET /instance/{id}/qr"
echo "   - Status: GET /instance/{id}/status" 
echo "   - Envio: POST /send"
echo "   - Dele√ß√£o: POST /instance/delete"
echo ""
echo "‚úÖ Webhook global configurado:"
echo "   - URL: https://kigyebrhfoljnydfipcr.supabase.co/functions/v1/webhook_whatsapp_web"
echo "   - N√£o requer configura√ß√£o individual por inst√¢ncia"
echo ""
echo "üìä Inst√¢ncias finais:"
FINAL_INSTANCES=$(curl -s http://localhost:3001/instances | jq '.instances | length' 2>/dev/null || echo "0")
echo "   - Total de inst√¢ncias: $FINAL_INSTANCES"
echo ""
echo "=== TESTE COMPLETO FINALIZADO ==="
echo "Data/Hora: $(date)"
