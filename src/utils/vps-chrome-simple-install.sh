
#!/bin/bash

# INSTALA√á√ÉO CHROME SIMPLIFICADA PARA VPS
echo "üöÄ INSTALA√á√ÉO CHROME SIMPLIFICADA"
echo "================================"
echo "üìÖ Data: $(date)"
echo "üéØ Objetivo: Instalar Chrome rapidamente"
echo ""

# Configura√ß√µes
LOG_FILE="/tmp/chrome_simple_install.log"

# Fun√ß√£o de log simplificada
log_info() {
    echo "[$(date '+%H:%M:%S')] ‚ÑπÔ∏è $1" | tee -a $LOG_FILE
}

log_success() {
    echo "[$(date '+%H:%M:%S')] ‚úÖ $1" | tee -a $LOG_FILE
}

log_error() {
    echo "[$(date '+%H:%M:%S')] ‚ùå $1" | tee -a $LOG_FILE
}

# Verifica√ß√µes b√°sicas r√°pidas
log_info "Verificando pr√©-requisitos b√°sicos..."

# Verificar se j√° existe Chrome instalado
if command -v google-chrome-stable &> /dev/null; then
    log_success "Google Chrome j√° instalado: $(google-chrome-stable --version)"
    log_info "Testando funcionalidade..."
    if timeout 10s google-chrome-stable --headless --no-sandbox --disable-gpu --dump-dom "data:text/html,<h1>Test</h1>" >/dev/null 2>&1; then
        log_success "Chrome funcionando corretamente!"
        exit 0
    else
        log_info "Chrome instalado mas com problemas, continuando instala√ß√£o..."
    fi
fi

# Verificar conectividade (timeout 5s)
log_info "Verificando conectividade..."
if timeout 5s ping -c 1 google.com >/dev/null 2>&1; then
    log_success "Conectividade OK"
else
    log_error "Sem conectividade - Abortando"
    exit 1
fi

# Atualizar apenas lista de pacotes (sem upgrade)
log_info "Atualizando lista de pacotes..."
if timeout 30s apt-get update -y >>$LOG_FILE 2>&1; then
    log_success "Lista de pacotes atualizada"
else
    log_error "Falha ao atualizar lista de pacotes"
    exit 1
fi

# Instalar depend√™ncias m√≠nimas
log_info "Instalando depend√™ncias b√°sicas..."
apt-get install -y wget gnupg ca-certificates >>$LOG_FILE 2>&1

# M√âTODO 1: Download direto do Chrome
log_info "M√âTODO 1: Download direto do Google Chrome..."
cd /tmp

CHROME_URL="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
log_info "Baixando Chrome..."

if timeout 60s wget -O google-chrome.deb "$CHROME_URL" >>$LOG_FILE 2>&1; then
    log_success "Download conclu√≠do"
else
    log_error "Falha no download - tentando m√©todo alternativo"
    
    # M√âTODO 2: Reposit√≥rio oficial
    log_info "M√âTODO 2: Instala√ß√£o via reposit√≥rio..."
    
    # Adicionar chave e reposit√≥rio
    wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - >>$LOG_FILE 2>&1
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    
    apt-get update -y >>$LOG_FILE 2>&1
    
    if timeout 120s apt-get install -y google-chrome-stable >>$LOG_FILE 2>&1; then
        log_success "Chrome instalado via reposit√≥rio"
    else
        log_error "Falha no reposit√≥rio - tentando Chromium"
        
        # M√âTODO 3: Chromium fallback
        log_info "M√âTODO 3: Instalando Chromium como alternativa..."
        if timeout 60s apt-get install -y chromium-browser >>$LOG_FILE 2>&1; then
            log_success "Chromium instalado"
            # Criar link simb√≥lico
            ln -sf /usr/bin/chromium-browser /usr/bin/google-chrome-stable
        else
            log_error "Falha completa na instala√ß√£o"
            exit 1
        fi
    fi
    
    # Pular para teste se reposit√≥rio funcionou
    if command -v google-chrome-stable &> /dev/null; then
        log_success "Instala√ß√£o via reposit√≥rio conclu√≠da"
    fi
else
    # Continuar com download direto
    log_info "Instalando via dpkg..."
    
    # Tentar instala√ß√£o direta
    if dpkg -i google-chrome.deb >>$LOG_FILE 2>&1; then
        log_success "Instala√ß√£o dpkg: OK"
    else
        log_info "Resolvendo depend√™ncias..."
        apt-get install -f -y >>$LOG_FILE 2>&1
        
        if dpkg -i google-chrome.deb >>$LOG_FILE 2>&1; then
            log_success "Instala√ß√£o corrigida: OK"
        else
            log_error "Falha na instala√ß√£o via dpkg"
            exit 1
        fi
    fi
fi

# Instalar depend√™ncias para headless
log_info "Instalando depend√™ncias headless..."
apt-get install -y \
    libnss3 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    fonts-liberation \
    libappindicator3-1 \
    xdg-utils >>$LOG_FILE 2>&1

log_success "Depend√™ncias instaladas"

# Teste final
log_info "Testando instala√ß√£o..."

# Detectar Chrome instalado
CHROME_EXEC=""
if [ -f "/usr/bin/google-chrome-stable" ]; then
    CHROME_EXEC="/usr/bin/google-chrome-stable"
elif [ -f "/usr/bin/chromium-browser" ]; then
    CHROME_EXEC="/usr/bin/chromium-browser"
else
    log_error "Nenhum execut√°vel encontrado"
    exit 1
fi

log_info "Chrome encontrado em: $CHROME_EXEC"

# Teste de vers√£o
if timeout 10s "$CHROME_EXEC" --version >>$LOG_FILE 2>&1; then
    VERSION=$("$CHROME_EXEC" --version)
    log_success "Vers√£o: $VERSION"
else
    log_error "Falha no teste de vers√£o"
    exit 1
fi

# Teste headless
log_info "Testando modo headless..."
if timeout 15s "$CHROME_EXEC" --headless --no-sandbox --disable-gpu --dump-dom "data:text/html,<h1>Test</h1>" >/dev/null 2>&1; then
    log_success "Modo headless: FUNCIONANDO"
else
    log_info "Testando com argumentos VPS..."
    if timeout 15s "$CHROME_EXEC" --headless --no-sandbox --disable-gpu --disable-dev-shm-usage --disable-setuid-sandbox --single-process --dump-dom "data:text/html,<h1>Test</h1>" >/dev/null 2>&1; then
        log_success "Modo headless com argumentos VPS: FUNCIONANDO"
    else
        log_error "Modo headless: FALHOU"
        exit 1
    fi
fi

# Configurar vari√°veis de ambiente
log_info "Configurando vari√°veis de ambiente..."
export PUPPETEER_EXECUTABLE_PATH="$CHROME_EXEC"
export CHROME_PATH="$CHROME_EXEC"
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Adicionar ao bashrc
echo "" >> ~/.bashrc
echo "# Chrome - Instala√ß√£o Simplificada $(date)" >> ~/.bashrc
echo "export PUPPETEER_EXECUTABLE_PATH=\"$CHROME_EXEC\"" >> ~/.bashrc
echo "export CHROME_PATH=\"$CHROME_EXEC\"" >> ~/.bashrc
echo "export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true" >> ~/.bashrc

log_success "Vari√°veis configuradas"

# Limpeza
rm -f /tmp/google-chrome.deb

echo ""
echo "üéâ INSTALA√á√ÉO CHROME SIMPLIFICADA CONCLU√çDA!"
echo "=========================================="
echo "‚úÖ Chrome instalado: $VERSION"
echo "‚úÖ Caminho: $CHROME_EXEC"
echo "‚úÖ Teste headless: PASSOU"
echo "‚úÖ Vari√°veis configuradas"
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "1. Reiniciar servidor WhatsApp: pm2 restart whatsapp-main-3002"
echo "2. Testar cria√ß√£o de inst√¢ncia"
echo ""
echo "üìä Log completo: $LOG_FILE"

log_success "INSTALA√á√ÉO CHROME SIMPLIFICADA FINALIZADA!"
