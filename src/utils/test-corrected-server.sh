
#!/bin/bash
# Teste do servidor corrigido - Cria√ß√£o permissiva de inst√¢ncia
# Execute: chmod +x src/utils/test-corrected-server.sh && src/utils/test-corrected-server.sh

echo "üß™ TESTE DO SERVIDOR CORRIGIDO - MODO PERMISSIVO"
echo "==============================================="

# Configura√ß√µes
VPS_IP="31.97.24.222"
VPS_PORT="3002"
AUTH_TOKEN="3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3"
INSTANCE_NAME="teste_corrigido_$(date +%s)"

echo "üìã Configura√ß√µes:"
echo "   üî∏ VPS: ${VPS_IP}:${VPS_PORT}"
echo "   üî∏ Inst√¢ncia: ${INSTANCE_NAME}"
echo "   üî∏ Modo: PERMISSIVO"

# Fun√ß√£o para fazer requests
make_request() {
    local url=$1
    local method=${2:-GET}
    local data=${3:-""}
    
    if [ "$method" = "POST" ] && [ -n "$data" ]; then
        timeout 15 curl -s -X POST "$url" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            --data "$data"
    else
        timeout 15 curl -s "$url" \
            -H "Authorization: Bearer $AUTH_TOKEN"
    fi
}

echo ""
echo "1Ô∏è‚É£ VERIFICAR SERVIDOR CORRIGIDO"
echo "==============================="
SERVER_STATUS=$(make_request "http://${VPS_IP}:${VPS_PORT}/health")

if echo "$SERVER_STATUS" | jq -e '.success and .permissive_mode' > /dev/null 2>&1; then
    echo "‚úÖ Servidor corrigido online e em modo permissivo"
    echo "$SERVER_STATUS" | jq '{version, permissive_mode, active_instances}'
else
    echo "‚ùå Servidor n√£o est√° em modo permissivo ou offline"
    echo "Response: $SERVER_STATUS"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ CRIAR INST√ÇNCIA COM SERVIDOR PERMISSIVO"
echo "=========================================="

CREATE_PAYLOAD="{\"instanceId\": \"$INSTANCE_NAME\", \"sessionName\": \"$INSTANCE_NAME\"}"

echo "üì§ Criando inst√¢ncia permissiva..."
CREATE_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/create" "POST" "$CREATE_PAYLOAD")

if echo "$CREATE_RESPONSE" | jq -e '.success' > /dev/null 2>&1; then
    echo "‚úÖ Inst√¢ncia criada com servidor permissivo!"
    echo "$CREATE_RESPONSE" | jq '{success, instanceId, status, message, permissive_mode}'
else
    echo "‚ùå Falha na cria√ß√£o permissiva"
    echo "Response: $CREATE_RESPONSE"
    exit 1
fi

echo ""
echo "3Ô∏è‚É£ VERIFICAR STATUS IMEDIATO"
echo "==========================="

echo "üîç Verificando status da inst√¢ncia rec√©m-criada..."
STATUS_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/$INSTANCE_NAME/status")

echo "üìä Status imediato:"
echo "$STATUS_RESPONSE" | jq '{success, instanceId, status, permissive_mode}'

echo ""
echo "4Ô∏è‚É£ TENTAR OBTER QR CODE (PERMISSIVO)"
echo "=================================="

echo "üì± Tentando obter QR Code..."
QR_PAYLOAD="{\"instanceId\": \"$INSTANCE_NAME\"}"
QR_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/qr" "POST" "$QR_PAYLOAD")

if echo "$QR_RESPONSE" | jq -e '.success and .qrCode' > /dev/null 2>&1; then
    echo "‚úÖ QR Code obtido com sucesso!"
    echo "üì± QR Code dispon√≠vel para escaneamento"
    
    # Mostrar o QR Code
    QR_CODE=$(echo "$QR_RESPONSE" | jq -r '.qrCode')
    echo ""
    echo "üì± ESCANEIE ESTE QR CODE NO SEU WHATSAPP:"
    echo "========================================"
    echo "$QR_CODE"
    echo "========================================"
    
else
    echo "‚è≥ QR Code ainda n√£o dispon√≠vel - mas isso √© NORMAL no modo permissivo"
    echo "$QR_RESPONSE" | jq '{success, status, message, permissive_info}'
    
    echo ""
    echo "üîÑ Aguardando 30s e tentando novamente..."
    sleep 30
    
    QR_RESPONSE_2=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/qr" "POST" "$QR_PAYLOAD")
    
    if echo "$QR_RESPONSE_2" | jq -e '.success and .qrCode' > /dev/null 2>&1; then
        echo "‚úÖ QR Code obtido na segunda tentativa!"
        
        QR_CODE=$(echo "$QR_RESPONSE_2" | jq -r '.qrCode')
        echo ""
        echo "üì± ESCANEIE ESTE QR CODE NO SEU WHATSAPP:"
        echo "========================================"
        echo "$QR_CODE"
        echo "========================================"
        
    else
        echo "‚è≥ QR Code ainda processando - aguarde mais um pouco"
        echo "$QR_RESPONSE_2" | jq '{status, message, permissive_info}'
    fi
fi

echo ""
echo "5Ô∏è‚É£ LISTAR TODAS AS INST√ÇNCIAS"
echo "============================"

echo "üìã Lista de inst√¢ncias no servidor:"
INSTANCES_LIST=$(make_request "http://${VPS_IP}:${VPS_PORT}/instances")
echo "$INSTANCES_LIST" | jq '{total, instances: [.instances[] | {instanceId, status, hasQR, createdAt}]}'

echo ""
echo "üéâ TESTE DO SERVIDOR CORRIGIDO CONCLU√çDO!"
echo "========================================"
echo "‚úÖ Servidor: CORRIGIDO e PERMISSIVO"
echo "‚úÖ Inst√¢ncia: CRIADA ($INSTANCE_NAME)"
echo "‚úÖ Modo: Cria√ß√£o ass√≠ncrona funcionando"
echo "‚úÖ Valida√ß√µes: Relaxadas e informativas"
echo ""
echo "üìù RESUMO DO QUE FOI CORRIGIDO:"
echo "1. Cria√ß√£o de inst√¢ncia n√£o aguarda QR (ass√≠ncrona)"
echo "2. Timeouts aumentados de 30s para 120s"
echo "3. Inst√¢ncias mantidas mesmo com timeout/erro"
echo "4. Retornos sempre informativos sobre o status"
echo "5. Valida√ß√µes permissivas (n√£o bloqueiam cria√ß√£o)"
echo ""
echo "üöÄ PR√ìXIMOS PASSOS:"
echo "1. Use o frontend /settings ‚Üí Teste Final"
echo "2. QR Code ser√° gerado em background"
echo "3. Escaneie quando aparecer"
echo "4. Sistema agora est√° robusto e permissivo!"
echo "========================================"
