
#!/bin/bash

# CORRE√á√ÉO PUPPETEER VPS - Comandos para executar na VPS
echo "üîß APLICANDO CORRE√á√ÉO PUPPETEER VPS"
echo "================================="

echo "üìç VPS: 31.97.24.222:3002"
echo "üìÖ Data: $(date)"

echo ""
echo "üöÄ FASE 1: PREPARA√á√ÉO DO AMBIENTE"
echo "================================"

echo "üìÇ Navegando para diret√≥rio do projeto..."
cd /root

echo "üì¶ Verificando se node_modules existe..."
if [ ! -d "node_modules" ]; then
    echo "‚ùå node_modules n√£o encontrado - instalando depend√™ncias..."
    npm init -y 2>/dev/null || echo "package.json j√° existe"
    npm install whatsapp-web.js puppeteer express cors node-fetch
else
    echo "‚úÖ node_modules encontrado"
fi

echo "üìã Verificando vers√µes instaladas..."
echo "Node.js: $(node --version)"
echo "NPM: $(npm --version)"

echo ""
echo "üöÄ FASE 2: APLICA√á√ÉO DO ARQUIVO CORRIGIDO"
echo "======================================="

echo "üíæ Fazendo backup do arquivo atual (se existir)..."
if [ -f "vps-server-persistent.js" ]; then
    cp vps-server-persistent.js vps-server-persistent.js.backup.$(date +%Y%m%d_%H%M%S)
    echo "‚úÖ Backup criado"
else
    echo "‚ö†Ô∏è Arquivo n√£o encontrado - ser√° criado novo"
fi

echo "üìù Aplicando arquivo corrigido..."
echo "‚ö†Ô∏è ATEN√á√ÉO: Copie o conte√∫do do arquivo src/utils/vps-server-persistent.js"
echo "   e salve como /root/vps-server-persistent.js na VPS"

echo ""
echo "üöÄ FASE 3: TESTE DA CONFIGURA√á√ÉO PUPPETEER"
echo "========================================"

echo "üß™ Criando teste espec√≠fico para a corre√ß√£o..."
cat > /tmp/test-puppeteer-corrected.js << 'EOF'
const puppeteer = require('puppeteer');

// Configura√ß√£o corrigida id√™ntica ao servidor
const PUPPETEER_CONFIG_CORRECTED = {
  headless: true,
  executablePath: '/usr/bin/google-chrome-stable',
  args: [
    '--no-sandbox',
    '--disable-setuid-sandbox',
    '--disable-dev-shm-usage',
    '--disable-accelerated-2d-canvas',
    '--no-first-run',
    '--no-zygote',
    '--single-process',
    '--disable-gpu',
    '--disable-features=VizDisplayCompositor',
    '--disable-background-timer-throttling',
    '--disable-backgrounding-occluded-windows',
    '--disable-renderer-backgrounding',
    '--disable-ipc-flooding-protection',
    '--disable-extensions',
    '--disable-default-apps',
    '--disable-sync',
    '--disable-translate',
    '--disable-plugins',
    '--disable-web-security',
    '--memory-pressure-off',
    '--max_old_space_size=512',
    '--disable-web-gl',
    '--disable-webgl',
    '--disable-threaded-animation',
    '--disable-threaded-scrolling',
    '--hide-scrollbars',
    '--mute-audio',
    '--disable-logging',
    '--disable-blink-features=AutomationControlled',
    '--disable-client-side-phishing-detection',
    '--disable-component-extensions-with-background-pages',
    '--disable-hang-monitor',
    '--disable-prompt-on-repost',
    '--metrics-recording-only',
    '--no-default-browser-check',
    '--password-store=basic',
    '--use-mock-keychain',
    '--disable-namespace-sandbox',
    '--disable-seccomp-filter-sandbox'
  ],
  ignoreHTTPSErrors: true,
  ignoreDefaultArgs: ['--disable-extensions'],
  timeout: 25000,
  dumpio: false
};

(async () => {
  try {
    console.log("üîß TESTE CORRE√á√ÉO PUPPETEER:");
    console.log("   Execut√°vel:", PUPPETEER_CONFIG_CORRECTED.executablePath);
    console.log("   Args:", PUPPETEER_CONFIG_CORRECTED.args.length, "argumentos");
    
    console.log("\nüß™ Testando inicializa√ß√£o com configura√ß√£o corrigida...");
    const browser = await puppeteer.launch(PUPPETEER_CONFIG_CORRECTED);
    
    console.log("‚úÖ SUCESSO: Puppeteer iniciou com configura√ß√£o corrigida!");
    
    const page = await browser.newPage();
    await page.goto('https://www.google.com', { waitUntil: 'domcontentloaded', timeout: 10000 });
    console.log("‚úÖ SUCESSO: P√°gina carregada com sucesso!");
    
    await browser.close();
    console.log("‚úÖ SUCESSO: Browser fechado com sucesso!");
    
    console.log("\nüéâ CORRE√á√ÉO PUPPETEER APLICADA COM SUCESSO!");
    console.log("   ‚úÖ Chrome Stable funcional");
    console.log("   ‚úÖ AppArmor bypass configurado");
    console.log("   ‚úÖ Argumentos otimizados aplicados");
    
  } catch (error) {
    console.error("‚ùå ERRO NA CORRE√á√ÉO:", error.message);
    console.error("Stack:", error.stack);
  }
})();
EOF

echo "üî¨ Executando teste da corre√ß√£o..."
node /tmp/test-puppeteer-corrected.js

echo ""
echo "üöÄ FASE 4: COMANDOS FINAIS"
echo "========================"

echo "üìã COMANDOS PARA EXECUTAR AP√ìS APLICAR O ARQUIVO:"
echo "   1. pm2 stop whatsapp-main-3002"
echo "   2. pm2 delete whatsapp-main-3002"
echo "   3. pm2 start vps-server-persistent.js --name whatsapp-main-3002"
echo "   4. pm2 logs whatsapp-main-3002 --lines 20"
echo "   5. pm2 save"

echo ""
echo "‚úÖ CORRE√á√ÉO PUPPETEER PREPARADA!"
echo "==============================="
EOF
